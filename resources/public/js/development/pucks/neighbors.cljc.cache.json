["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$pucks.neighbors","~:imports",null,"~:requires",["^ ","~$globals","~$pucks.globals","^:","^:","~$vec2D","~$pucks.vec2D","^<","^<","~$util","~$pucks.util","^>","^>","~$cljs","~$cljs.core","^@","^@"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$strip-embedded-agents",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/jfong/projects/pucks/src/pucks/neighbors.cljc","~:line",9,"~:column",7,"~:end-line",9,"~:end-column",28,"~:arglists",["~#list",["~$quote",["^M",[["~$a"]]]]],"~:doc","Strips the embedded agents, which might be in the values of :neighbors, \n:sensed, and :overlaps, from agent a. This prevents the accumulation of long\nor infinite chains of recursive agent references and also prevents agents\nfrom inappropriately learning about agents that they have not sensed directly."],"^5","~$pucks.neighbors/strip-embedded-agents","^G","src/pucks/neighbors.cljc","^K",28,"~:method-params",["^M",[["~$a"]]],"~:protocol-impl",null,"~:arglists-meta",["^M",[null,null]],"^I",1,"~:variadic?",false,"^H",9,"~:ret-tag",["^4",["~$clj","~$clj-nil"]],"^J",9,"~:max-fixed-arity",1,"~:fn-var",true,"^L",["^M",["^N",["^M",[["~$a"]]]]],"^O","Strips the embedded agents, which might be in the values of :neighbors, \n:sensed, and :overlaps, from agent a. This prevents the accumulation of long\nor infinite chains of recursive agent references and also prevents agents\nfrom inappropriately learning about agents that they have not sensed directly."],"~$neighborhood-grid",["^ ","^E",null,"^F",["^ ","^G","/Users/jfong/projects/pucks/src/pucks/neighbors.cljc","^H",20,"^I",7,"^J",20,"^K",24,"^L",["^M",["^N",["^M",[["~$agents"]]]]],"^O","Returns a neighborhood grid containing all agents."],"^5","~$pucks.neighbors/neighborhood-grid","^G","src/pucks/neighbors.cljc","^K",24,"^Q",["^M",[["^["]]],"^R",null,"^S",["^M",[null,null]],"^I",1,"^T",false,"^H",20,"^U","~$any","^J",20,"^X",1,"^Y",true,"^L",["^M",["^N",["^M",[["^["]]]]],"^O","Returns a neighborhood grid containing all agents."],"~$get-neighboring-grid-spaces",["^ ","^E",null,"^F",["^ ","^G","/Users/jfong/projects/pucks/src/pucks/neighbors.cljc","^H",36,"^I",7,"^J",36,"^K",34,"^L",["^M",["^N",["^M",[["~$grid-size",["~$x","~$y"]]]]]],"^O","Returns a vector of the indices for the neighborhood grid where neighbors\ncould be found."],"^5","~$pucks.neighbors/get-neighboring-grid-spaces","^G","src/pucks/neighbors.cljc","^K",34,"^Q",["^M",[["^13","~$p__3783"]]],"^R",null,"^S",["^M",[null,null]],"^I",1,"^T",false,"^H",36,"^U",["^4",["^V","~$cljs.core/IVector","^11","~$cljs.core/MetaFn","^W"]],"^J",36,"^X",2,"^Y",true,"^L",["^M",["^N",["^M",[["^13",["~$x","~$y"]]]]]],"^O","Returns a vector of the indices for the neighborhood grid where neighbors\ncould be found."],"~$get-potential-neighbors",["^ ","^E",null,"^F",["^ ","^G","/Users/jfong/projects/pucks/src/pucks/neighbors.cljc","^H",45,"^I",7,"^J",45,"^K",30,"^L",["^M",["^N",["^M",[["~$grid","~$a"]]]]],"^O","Gets the potential neighbors of an agent."],"^5","~$pucks.neighbors/get-potential-neighbors","^G","src/pucks/neighbors.cljc","^K",30,"^Q",["^M",[["^19","~$a"]]],"^R",null,"^S",["^M",[null,null]],"^I",1,"^T",false,"^H",45,"^U","^11","^J",45,"^X",2,"^Y",true,"^L",["^M",["^N",["^M",[["^19","~$a"]]]]],"^O","Gets the potential neighbors of an agent."],"~$update-neighbors",["^ ","^E",null,"^F",["^ ","^G","/Users/jfong/projects/pucks/src/pucks/neighbors.cljc","^H",55,"^I",7,"^J",55,"^K",23,"^L",["^M",["^N",["^M",[[]]]]],"^O","Annotates each agent in the simulation with :neighbors and :overlaps."],"^5","~$pucks.neighbors/update-neighbors","^G","src/pucks/neighbors.cljc","^K",23,"^Q",["^M",[[]]],"^R",null,"^S",["^M",[null,null]],"^I",1,"^T",false,"^H",55,"^U",["^4",[null,"^11"]],"^J",55,"^X",0,"^Y",true,"^L",["^M",["^N",["^M",[[]]]]],"^O","Annotates each agent in the simulation with :neighbors and :overlaps."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:neighborhood-size","~:sensed","~:beacon","~:stone","~:nursery","~:screen-size","~:radius","~:overlaps","~:id","~:position","~:neighbors"]],"~:order",["^1K","^1B","^1H","^1F","^1A","^1J","^1D","^1C","^1E","^1I","^1G"]],"^O",null]