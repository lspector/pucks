["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$pucks.physics","~:imports",null,"~:requires",["^ ","~$vec2D","~$pucks.vec2D","~$globals","~$pucks.globals","~$q","~$quil.core","~$util","~$pucks.util","^<","^<","~$pucks.agents.torpedo","^B","^?","^?","~$torpedo","^B","^A","^A","^>","^>"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$all-pairs",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/jfong/projects/pucks/src/pucks/physics.cljc","~:line",124,"~:column",7,"~:end-line",124,"~:end-column",16,"~:arglists",["~#list",["~$quote",["^P",[["~$v"]]]]],"~:doc","Returns a vector of all possible pairs of items from vector v."],"^7","~$pucks.physics/all-pairs","^J","src/pucks/physics.cljc","^N",16,"~:method-params",["^P",[["~$v"]]],"~:protocol-impl",null,"~:arglists-meta",["^P",[null,null]],"^L",1,"~:variadic?",false,"^K",124,"~:ret-tag",["^6",["~$clj","~$cljs.core/IVector","~$any","~$cljs.core/MetaFn","~$clj-nil"]],"^M",124,"~:max-fixed-arity",1,"~:fn-var",true,"^O",["^P",["^Q",["^P",[["~$v"]]]]],"^R","Returns a vector of all possible pairs of items from vector v."],"~$process-transfer-bid-in-agent-map",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/projects/pucks/src/pucks/physics.cljc","^K",113,"^L",7,"^M",113,"^N",40,"^O",["^P",["^Q",["^P",[[["^ ","~:keys",["~$self","~$other","~$bid"]],"~$agent-map"]]]]],"^R","Takes a transfer and a map from ids to agents, and returns the map changed\nto reflect the transfer (meaning that the transfer's bid is paid by the \ntransfer's :self to the transfer's :other)."],"^7","~$pucks.physics/process-transfer-bid-in-agent-map","^J","src/pucks/physics.cljc","^N",40,"^T",["^P",[["~$p__3543","^19"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",113,"^X",["^6",["^Y","^["]],"^M",113,"^12",2,"^13",true,"^O",["^P",["^Q",["^P",[[["^ ","^15",["^16","^17","^18"]],"^19"]]]]],"^R","Takes a transfer and a map from ids to agents, and returns the map changed\nto reflect the transfer (meaning that the transfer's bid is paid by the \ntransfer's :self to the transfer's :other)."],"~$enforce-bonds",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/projects/pucks/src/pucks/physics.cljc","^K",146,"^L",7,"^M",146,"^N",20,"^O",["^P",["^Q",["^P",[["~$agents"]]]]],"^R","Takes a sequence of agents for which new velocities have been calculated and\nreturns a sequence of the agents with the velocities and adjusted to enforce \nthe bonds between agents."],"^7","~$pucks.physics/enforce-bonds","^J","src/pucks/physics.cljc","^N",20,"^T",["^P",[["^1="]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",146,"^X","^Y","^M",146,"^12",1,"^13",true,"^O",["^P",["^Q",["^P",[["^1="]]]]],"^R","Takes a sequence of agents for which new velocities have been calculated and\nreturns a sequence of the agents with the velocities and adjusted to enforce \nthe bonds between agents."],"~$acceptable",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/projects/pucks/src/pucks/physics.cljc","^K",57,"^L",7,"^M",57,"^N",17,"^O",["^P",["^Q",["^P",[["~$my-ask","~$my-bid","~$your-bid"]]]]],"^R","Returns a truthy value if the bids are acceptable to the ask, and false\notherwise. If an ask is a map then it must match the other agent's bid exactly.\nIf it is not a map then it should be a function of two arguments (bids)."],"^7","~$pucks.physics/acceptable","^J","src/pucks/physics.cljc","^N",17,"^T",["^P",[["^1@","^1A","^1B"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",57,"^X",["^6",["~$boolean","^["]],"^M",57,"^12",3,"^13",true,"^O",["^P",["^Q",["^P",[["^1@","^1A","^1B"]]]]],"^R","Returns a truthy value if the bids are acceptable to the ask, and false\notherwise. If an ask is a map then it must match the other agent's bid exactly.\nIf it is not a map then it should be a function of two arguments (bids)."],"~$colliding?",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/projects/pucks/src/pucks/physics.cljc","^K",29,"^L",7,"^M",29,"^N",17,"^O",["^P",["^Q",["^P",[["^16","~$neighbor"]]]]],"^R","Returns true if self and neighbor have colliding cores."],"^7","~$pucks.physics/colliding?","^J","src/pucks/physics.cljc","^N",17,"^T",["^P",[["^16","^1F"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",29,"^X","^1D","^M",29,"^12",2,"^13",true,"^O",["^P",["^Q",["^P",[["^16","^1F"]]]]],"^R","Returns true if self and neighbor have colliding cores."],"~$arbitrate-proposals",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/projects/pucks/src/pucks/physics.cljc","^K",177,"^L",7,"^M",177,"^N",26,"^O",["^P",["^Q",["^P",[[]]]]],"^R","Processes all of the proposals of all of the agents and makes appropriate\nchanges to the world."],"^7","~$pucks.physics/arbitrate-proposals","^J","src/pucks/physics.cljc","^N",26,"^T",["^P",[[]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",177,"^X",["^6",[null,"^["]],"^M",177,"^12",0,"^13",true,"^O",["^P",["^Q",["^P",[[]]]]],"^R","Processes all of the proposals of all of the agents and makes appropriate\nchanges to the world."],"~$can-afford",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/projects/pucks/src/pucks/physics.cljc","^K",66,"^L",7,"^M",66,"^N",17,"^O",["^P",["^Q",["^P",[["~$puck","^18"]]]]],"^R","Returns true if the puck can afford to pay the bid."],"^7","~$pucks.physics/can-afford","^J","src/pucks/physics.cljc","^N",17,"^T",["^P",[["^1K","^18"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",66,"^X","^1D","^M",66,"^12",2,"^13",true,"^O",["^P",["^Q",["^P",[["^1K","^18"]]]]],"^R","Returns true if the puck can afford to pay the bid."],"~$without",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/projects/pucks/src/pucks/physics.cljc","^K",76,"^L",7,"^M",76,"^N",14,"^O",["^P",["^Q",["^P",[["^1K","^18"]]]]],"^R","Returns the puck that results after paying the bid."],"^7","~$pucks.physics/without","^J","src/pucks/physics.cljc","^N",14,"^T",["^P",[["^1K","^18"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",76,"^M",76,"^12",2,"^13",true,"^O",["^P",["^Q",["^P",[["^1K","^18"]]]]],"^R","Returns the puck that results after paying the bid."],"~$affect-same-agents?",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/projects/pucks/src/pucks/physics.cljc","^K",132,"^L",7,"^M",132,"^N",26,"^O",["^P",["^Q",["^P",[["~$xfer1","~$xfer2"]]]]],"^R","Returns true if the two transfers affect the same agents, and false\notherwise."],"^7","~$pucks.physics/affect-same-agents?","^J","src/pucks/physics.cljc","^N",26,"^T",["^P",[["^1P","^1Q"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",132,"^X","^1D","^M",132,"^12",2,"^13",true,"^O",["^P",["^Q",["^P",[["^1P","^1Q"]]]]],"^R","Returns true if the two transfers affect the same agents, and false\notherwise."],"~$one-sided?",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/projects/pucks/src/pucks/physics.cljc","^K",139,"^L",7,"^M",139,"^N",17,"^O",["^P",["^Q",["^P",[["~$xfer"]]]]],"^R","Returns true if the transfer is one-sided, meaning that no matching\ntransfer from another agent is required for the transfer to proceed."],"^7","~$pucks.physics/one-sided?","^J","src/pucks/physics.cljc","^N",17,"^T",["^P",[["^1T"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",139,"^X","^1D","^M",139,"^12",1,"^13",true,"^O",["^P",["^Q",["^P",[["^1T"]]]]],"^R","Returns true if the transfer is one-sided, meaning that no matching\ntransfer from another agent is required for the transfer to proceed."],"~$update-properties",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/projects/pucks/src/pucks/physics.cljc","^K",36,"^L",7,"^M",36,"^N",24,"^O",["^P",["^Q",["^P",[["^1K","~$properties-proposals"]]]]],"^R","Returns the given puck with the allowed property changes specified\nin properties-proposals."],"^7","~$pucks.physics/update-properties","^J","src/pucks/physics.cljc","^N",24,"^T",["^P",[["^1K","^1W"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",36,"^M",36,"^12",2,"^13",true,"^O",["^P",["^Q",["^P",[["^1K","^1W"]]]]],"^R","Returns the given puck with the allowed property changes specified\nin properties-proposals."],"~$with",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/projects/pucks/src/pucks/physics.cljc","^K",95,"^L",7,"^M",95,"^N",11,"^O",["^P",["^Q",["^P",[["^1K","^18"]]]]],"^R","Returns the puck that results after being paid the bid."],"^7","~$pucks.physics/with","^J","src/pucks/physics.cljc","^N",11,"^T",["^P",[["^1K","^18"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",95,"^M",95,"^12",2,"^13",true,"^O",["^P",["^Q",["^P",[["^1K","^18"]]]]],"^R","Returns the puck that results after being paid the bid."],"~$generate-proposals",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/projects/pucks/src/pucks/physics.cljc","^K",13,"^L",7,"^M",13,"^N",25,"^O",["^P",["^Q",["^P",[[]]]]],"^R","Annotates each agent with its proposals, which are generated by calling\nthe agent's proposal function on the agent itself, but with the agent's\nneighbors and position removed."],"^7","~$pucks.physics/generate-proposals","^J","src/pucks/physics.cljc","^N",25,"^T",["^P",[[]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",13,"^X",["^6",[null,"^["]],"^M",13,"^12",0,"^13",true,"^O",["^P",["^Q",["^P",[[]]]]],"^R","Annotates each agent with its proposals, which are generated by calling\nthe agent's proposal function on the agent itself, but with the agent's\nneighbors and position removed."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","~$q","^?","^?","^?"],"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:properties","~:spawn","~:vent","~:fire-torpedo","~:rotation","~:proposal-function","~:color","~:solid","~:else","~:sensed","~:collision-resolution-acceleration","~:zapper","~:promise","~:stone","~:transfer","~:other","~:nursery","~:other-id","~:steps","~:memory","~:torpedo-energy","~:energy","~:radius","~:thrust-angle","~:inventory","~:cost-of-living","~:proposals","~:bound-to","~:just-collided","~:genome","~:id","~:core-color","~:max-acceleration","~:position","~:cost-of-collision","~:max-rotational-velocity","~:eye-color","~:neighbors","~:mobile","~:acceleration","~:self-id","~:max-velocity","~:velocity","~:self","~:ask","~:bid"]],"~:order",["^2O","^2:","^2V","^2Z","^2K","^2[","^2<","^2;","^2Y","^2T","^2J","^2M","^2A","^2H","^2P","^34","^2D","^36","^35","^2S","^33","^2C","^2@","^31","^2F","^29","^2L","^30","^2?","^2U","^32","^2X","^2=","^26","^2E","^2G","^2>","^2R","^28","^2I","^2B","^2N","^27","^2W","^2Q","^25"]],"^R",null]