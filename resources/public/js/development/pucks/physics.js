// Compiled by ClojureScript 1.10.520 {}
goog.provide('pucks.physics');
goog.require('cljs.core');
goog.require('quil.core');
goog.require('pucks.globals');
goog.require('pucks.vec2D');
goog.require('pucks.util');
goog.require('pucks.agents.torpedo');
/**
 * Annotates each agent with its proposals, which are generated by calling
 * the agent's proposal function on the agent itself, but with the agent's
 * neighbors and position removed.
 */
pucks.physics.generate_proposals = (function pucks$physics$generate_proposals(){
return cljs.core.swap_BANG_.call(null,pucks.globals.all_agents,(function (pucks__$1){
return cljs.core.into.call(null,cljs.core.PersistentVector.EMPTY,pucks.util.pmapallv.call(null,(function (p1__6733_SHARP_){
return cljs.core.assoc.call(null,p1__6733_SHARP_,new cljs.core.Keyword(null,"proposals","proposals",-1859752048),new cljs.core.Keyword(null,"proposal-function","proposal-function",-646608988).cljs$core$IFn$_invoke$arity$1(p1__6733_SHARP_).call(null,cljs.core.assoc.call(null,cljs.core.assoc.call(null,p1__6733_SHARP_,new cljs.core.Keyword(null,"position","position",-2011731912),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0)], null)),new cljs.core.Keyword(null,"neighbors","neighbors",1430436473),cljs.core.PersistentVector.EMPTY)));
}),pucks__$1));
}));
});
/**
 * Returns true if self and neighbor have colliding cores.
 */
pucks.physics.colliding_QMARK_ = (function pucks$physics$colliding_QMARK_(self,neighbor){
return (pucks.vec2D.length.call(null,new cljs.core.Keyword(null,"position","position",-2011731912).cljs$core$IFn$_invoke$arity$1(neighbor)) < ((new cljs.core.Keyword(null,"radius","radius",-2073122258).cljs$core$IFn$_invoke$arity$1(self) / (2)) + (new cljs.core.Keyword(null,"radius","radius",-2073122258).cljs$core$IFn$_invoke$arity$1(neighbor) / (2))));
});
/**
 * Returns the given puck with the allowed property changes specified
 * in properties-proposals.
 */
pucks.physics.update_properties = (function pucks$physics$update_properties(puck,properties_proposals){
var p = puck;
var remaining = properties_proposals;
while(true){
if(cljs.core.empty_QMARK_.call(null,remaining)){
return p;
} else {
var vec__6734 = cljs.core.first.call(null,remaining);
var k = cljs.core.nth.call(null,vec__6734,(0),null);
var v = cljs.core.nth.call(null,vec__6734,(1),null);
var G__6737 = k;
var G__6737__$1 = (((G__6737 instanceof cljs.core.Keyword))?G__6737.fqn:null);
switch (G__6737__$1) {
case "solid":
var G__6739 = (cljs.core.truth_(new cljs.core.Keyword(null,"mobile","mobile",1403078170).cljs$core$IFn$_invoke$arity$1(p))?p:cljs.core.assoc.call(null,p,new cljs.core.Keyword(null,"solid","solid",-2023773691),v));
var G__6740 = cljs.core.rest.call(null,remaining);
p = G__6739;
remaining = G__6740;
continue;

break;
case "color":
var G__6741 = cljs.core.assoc.call(null,p,new cljs.core.Keyword(null,"color","color",1011675173),v);
var G__6742 = cljs.core.rest.call(null,remaining);
p = G__6741;
remaining = G__6742;
continue;

break;
case "eye-color":
var G__6743 = cljs.core.assoc.call(null,p,new cljs.core.Keyword(null,"eye-color","eye-color",1844620441),v);
var G__6744 = cljs.core.rest.call(null,remaining);
p = G__6743;
remaining = G__6744;
continue;

break;
case "core-color":
var G__6745 = cljs.core.assoc.call(null,p,new cljs.core.Keyword(null,"core-color","core-color",278930388),v);
var G__6746 = cljs.core.rest.call(null,remaining);
p = G__6745;
remaining = G__6746;
continue;

break;
default:
throw (new Error(["No matching clause: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__6737__$1)].join('')));

}
}
break;
}
});
/**
 * Returns a truthy value if the bids are acceptable to the ask, and false
 * otherwise. If an ask is a map then it must match the other agent's bid exactly.
 * If it is not a map then it should be a function of two arguments (bids).
 */
pucks.physics.acceptable = (function pucks$physics$acceptable(my_ask,my_bid,your_bid){
if(cljs.core.map_QMARK_.call(null,my_ask)){
return cljs.core._EQ_.call(null,my_ask,your_bid);
} else {
return my_ask.call(null,my_bid,your_bid);
}
});
/**
 * Returns true if the puck can afford to pay the bid.
 */
pucks.physics.can_afford = (function pucks$physics$can_afford(puck,bid){
return cljs.core.every_QMARK_.call(null,(function (p__6747){
var vec__6748 = p__6747;
var k = cljs.core.nth.call(null,vec__6748,(0),null);
var v = cljs.core.nth.call(null,vec__6748,(1),null);
var G__6751 = k;
var G__6751__$1 = (((G__6751 instanceof cljs.core.Keyword))?G__6751.fqn:null);
switch (G__6751__$1) {
case "energy":
return (new cljs.core.Keyword(null,"energy","energy",129856526).cljs$core$IFn$_invoke$arity$1(puck) > v);

break;
case "inventory":
return cljs.core.some.call(null,cljs.core.PersistentHashSet.createAsIfByAssoc([v]),new cljs.core.Keyword(null,"inventory","inventory",860201871).cljs$core$IFn$_invoke$arity$1(puck));

break;
default:
return true;

}
}),bid);
});
/**
 * Returns the puck that results after paying the bid.
 */
pucks.physics.without = (function pucks$physics$without(puck,bid){
var remaining = bid;
var result = puck;
while(true){
if(cljs.core.empty_QMARK_.call(null,remaining)){
return result;
} else {
var vec__6753 = cljs.core.first.call(null,remaining);
var k = cljs.core.nth.call(null,vec__6753,(0),null);
var v = cljs.core.nth.call(null,vec__6753,(1),null);
var G__6757 = cljs.core.rest.call(null,remaining);
var G__6758 = cljs.core.assoc.call(null,result,k,(function (){var G__6756 = k;
var G__6756__$1 = (((G__6756 instanceof cljs.core.Keyword))?G__6756.fqn:null);
switch (G__6756__$1) {
case "energy":
return (new cljs.core.Keyword(null,"energy","energy",129856526).cljs$core$IFn$_invoke$arity$1(result) - v);

break;
case "inventory":
return pucks.util.remove_one.call(null,v,new cljs.core.Keyword(null,"inventory","inventory",860201871).cljs$core$IFn$_invoke$arity$1(result));

break;
case "promise":
return cljs.core.merge.call(null,new cljs.core.Keyword(null,"promise","promise",1767129287).cljs$core$IFn$_invoke$arity$1(result),v);

break;
case "memory":
return new cljs.core.Keyword(null,"memory","memory",-1449401430).cljs$core$IFn$_invoke$arity$1(result);

break;
case "bound-to":
return new cljs.core.Keyword(null,"bound-to","bound-to",-1422182221).cljs$core$IFn$_invoke$arity$1(result);

break;
default:
return null;

}
})());
remaining = G__6757;
result = G__6758;
continue;
}
break;
}
});
/**
 * Returns the puck that results after being paid the bid.
 */
pucks.physics.with$ = (function pucks$physics$with(puck,bid){
var remaining = bid;
var result = puck;
while(true){
if(cljs.core.empty_QMARK_.call(null,remaining)){
return result;
} else {
var vec__6760 = cljs.core.first.call(null,remaining);
var k = cljs.core.nth.call(null,vec__6760,(0),null);
var v = cljs.core.nth.call(null,vec__6760,(1),null);
var G__6764 = cljs.core.rest.call(null,remaining);
var G__6765 = cljs.core.assoc.call(null,result,k,(function (){var G__6763 = k;
var G__6763__$1 = (((G__6763 instanceof cljs.core.Keyword))?G__6763.fqn:null);
switch (G__6763__$1) {
case "energy":
var x__4222__auto__ = 1.0;
var y__4223__auto__ = (new cljs.core.Keyword(null,"energy","energy",129856526).cljs$core$IFn$_invoke$arity$1(result) + v);
return ((x__4222__auto__ < y__4223__auto__) ? x__4222__auto__ : y__4223__auto__);

break;
case "inventory":
return cljs.core.conj.call(null,new cljs.core.Keyword(null,"inventory","inventory",860201871).cljs$core$IFn$_invoke$arity$1(result),v);

break;
case "memory":
return cljs.core.merge.call(null,new cljs.core.Keyword(null,"memory","memory",-1449401430).cljs$core$IFn$_invoke$arity$1(result),v);

break;
case "bound-to":
return cljs.core.conj.call(null,new cljs.core.Keyword(null,"bound-to","bound-to",-1422182221).cljs$core$IFn$_invoke$arity$1(result),v);

break;
default:
return null;

}
})());
remaining = G__6764;
result = G__6765;
continue;
}
break;
}
});
/**
 * Takes a transfer and a map from ids to agents, and returns the map changed
 * to reflect the transfer (meaning that the transfer's bid is paid by the 
 * transfer's :self to the transfer's :other).
 */
pucks.physics.process_transfer_bid_in_agent_map = (function pucks$physics$process_transfer_bid_in_agent_map(p__6767,agent_map){
var map__6768 = p__6767;
var map__6768__$1 = (((((!((map__6768 == null))))?(((((map__6768.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__6768.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.call(null,cljs.core.hash_map,map__6768):map__6768);
var self = cljs.core.get.call(null,map__6768__$1,new cljs.core.Keyword(null,"self","self",-1547428899));
var other = cljs.core.get.call(null,map__6768__$1,new cljs.core.Keyword(null,"other","other",995793544));
var bid = cljs.core.get.call(null,map__6768__$1,new cljs.core.Keyword(null,"bid","bid",-1944960257));
return cljs.core.assoc.call(null,cljs.core.assoc.call(null,cljs.core.dissoc.call(null,cljs.core.dissoc.call(null,agent_map,self),other),self,pucks.physics.without.call(null,self.call(null,agent_map),bid)),other,pucks.physics.with$.call(null,other.call(null,agent_map),bid));
});
/**
 * Returns a vector of all possible pairs of items from vector v.
 */
pucks.physics.all_pairs = (function pucks$physics$all_pairs(v){
if((cljs.core.count.call(null,v) < (3))){
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [v], null);
} else {
return cljs.core.vec.call(null,(function (){var iter__4523__auto__ = (function pucks$physics$all_pairs_$_iter__6770(s__6771){
return (new cljs.core.LazySeq(null,(function (){
var s__6771__$1 = s__6771;
while(true){
var temp__5735__auto__ = cljs.core.seq.call(null,s__6771__$1);
if(temp__5735__auto__){
var xs__6292__auto__ = temp__5735__auto__;
var item1 = cljs.core.first.call(null,xs__6292__auto__);
var iterys__4519__auto__ = ((function (s__6771__$1,item1,xs__6292__auto__,temp__5735__auto__){
return (function pucks$physics$all_pairs_$_iter__6770_$_iter__6772(s__6773){
return (new cljs.core.LazySeq(null,((function (s__6771__$1,item1,xs__6292__auto__,temp__5735__auto__){
return (function (){
var s__6773__$1 = s__6773;
while(true){
var temp__5735__auto____$1 = cljs.core.seq.call(null,s__6773__$1);
if(temp__5735__auto____$1){
var s__6773__$2 = temp__5735__auto____$1;
if(cljs.core.chunked_seq_QMARK_.call(null,s__6773__$2)){
var c__4521__auto__ = cljs.core.chunk_first.call(null,s__6773__$2);
var size__4522__auto__ = cljs.core.count.call(null,c__4521__auto__);
var b__6775 = cljs.core.chunk_buffer.call(null,size__4522__auto__);
if((function (){var i__6774 = (0);
while(true){
if((i__6774 < size__4522__auto__)){
var item2 = cljs.core._nth.call(null,c__4521__auto__,i__6774);
if(cljs.core.not_EQ_.call(null,item1,item2)){
cljs.core.chunk_append.call(null,b__6775,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [item1,item2], null));

var G__6776 = (i__6774 + (1));
i__6774 = G__6776;
continue;
} else {
var G__6777 = (i__6774 + (1));
i__6774 = G__6777;
continue;
}
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__6775),pucks$physics$all_pairs_$_iter__6770_$_iter__6772.call(null,cljs.core.chunk_rest.call(null,s__6773__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__6775),null);
}
} else {
var item2 = cljs.core.first.call(null,s__6773__$2);
if(cljs.core.not_EQ_.call(null,item1,item2)){
return cljs.core.cons.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [item1,item2], null),pucks$physics$all_pairs_$_iter__6770_$_iter__6772.call(null,cljs.core.rest.call(null,s__6773__$2)));
} else {
var G__6778 = cljs.core.rest.call(null,s__6773__$2);
s__6773__$1 = G__6778;
continue;
}
}
} else {
return null;
}
break;
}
});})(s__6771__$1,item1,xs__6292__auto__,temp__5735__auto__))
,null,null));
});})(s__6771__$1,item1,xs__6292__auto__,temp__5735__auto__))
;
var fs__4520__auto__ = cljs.core.seq.call(null,iterys__4519__auto__.call(null,v));
if(fs__4520__auto__){
return cljs.core.concat.call(null,fs__4520__auto__,pucks$physics$all_pairs_$_iter__6770.call(null,cljs.core.rest.call(null,s__6771__$1)));
} else {
var G__6779 = cljs.core.rest.call(null,s__6771__$1);
s__6771__$1 = G__6779;
continue;
}
} else {
return null;
}
break;
}
}),null,null));
});
return iter__4523__auto__.call(null,v);
})());
}
});
/**
 * Returns true if the two transfers affect the same agents, and false
 * otherwise.
 */
pucks.physics.affect_same_agents_QMARK_ = (function pucks$physics$affect_same_agents_QMARK_(xfer1,xfer2){
return cljs.core._EQ_.call(null,cljs.core.PersistentHashSet.createAsIfByAssoc([new cljs.core.Keyword(null,"other","other",995793544).cljs$core$IFn$_invoke$arity$1(xfer1),new cljs.core.Keyword(null,"self","self",-1547428899).cljs$core$IFn$_invoke$arity$1(xfer1)]),cljs.core.PersistentHashSet.createAsIfByAssoc([new cljs.core.Keyword(null,"self","self",-1547428899).cljs$core$IFn$_invoke$arity$1(xfer2),new cljs.core.Keyword(null,"other","other",995793544).cljs$core$IFn$_invoke$arity$1(xfer2)]));
});
/**
 * Returns true if the transfer is one-sided, meaning that no matching
 * transfer from another agent is required for the transfer to proceed.
 */
pucks.physics.one_sided_QMARK_ = (function pucks$physics$one_sided_QMARK_(xfer){
return ((((cljs.core.coll_QMARK_.call(null,new cljs.core.Keyword(null,"ask","ask",707712414).cljs$core$IFn$_invoke$arity$1(xfer))) && (cljs.core.empty_QMARK_.call(null,new cljs.core.Keyword(null,"ask","ask",707712414).cljs$core$IFn$_invoke$arity$1(xfer))))) || (cljs.core.empty_QMARK_.call(null,new cljs.core.Keyword(null,"bid","bid",-1944960257).cljs$core$IFn$_invoke$arity$1(xfer))));
});
/**
 * Takes a sequence of agents for which new velocities have been calculated and
 * returns a sequence of the agents with the velocities and adjusted to enforce 
 * the bonds between agents.
 */
pucks.physics.enforce_bonds = (function pucks$physics$enforce_bonds(agents){
var agent_map = cljs.core.zipmap.call(null,cljs.core.map.call(null,new cljs.core.Keyword(null,"id","id",-1388402092),agents),agents);
return cljs.core.mapv.call(null,((function (agent_map){
return (function (a){
var new_v = ((cljs.core.empty_QMARK_.call(null,new cljs.core.Keyword(null,"bound-to","bound-to",-1422182221).cljs$core$IFn$_invoke$arity$1(a)))?new cljs.core.Keyword(null,"velocity","velocity",-581524355).cljs$core$IFn$_invoke$arity$1(a):(function (){var bound_agents = cljs.core.mapv.call(null,((function (agent_map){
return (function (p1__6780_SHARP_){
return cljs.core.get.call(null,agent_map,p1__6780_SHARP_);
});})(agent_map))
,new cljs.core.Keyword(null,"bound-to","bound-to",-1422182221).cljs$core$IFn$_invoke$arity$1(a));
return cljs.core.apply.call(null,pucks.vec2D.avgv,cljs.core.mapv.call(null,((function (bound_agents,agent_map){
return (function (b){
var bond_influence = pucks.util.clamp01.call(null,(((2) * (pucks.vec2D.distance.call(null,new cljs.core.Keyword(null,"position","position",-2011731912).cljs$core$IFn$_invoke$arity$1(a),new cljs.core.Keyword(null,"position","position",-2011731912).cljs$core$IFn$_invoke$arity$1(b)) - new cljs.core.Keyword(null,"radius","radius",-2073122258).cljs$core$IFn$_invoke$arity$1(a))) / new cljs.core.Keyword(null,"radius","radius",-2073122258).cljs$core$IFn$_invoke$arity$1(a)));
return pucks.vec2D._PLUS_v.call(null,pucks.vec2D._STAR_v.call(null,(1.0 - bond_influence),new cljs.core.Keyword(null,"velocity","velocity",-581524355).cljs$core$IFn$_invoke$arity$1(a)),pucks.vec2D._STAR_v.call(null,bond_influence,pucks.vec2D.avgv.call(null,new cljs.core.Keyword(null,"velocity","velocity",-581524355).cljs$core$IFn$_invoke$arity$1(a),new cljs.core.Keyword(null,"velocity","velocity",-581524355).cljs$core$IFn$_invoke$arity$1(b))));
});})(bound_agents,agent_map))
,bound_agents));
})());
var new_p = pucks.util.wrap_position.call(null,pucks.vec2D._PLUS_v.call(null,new cljs.core.Keyword(null,"position","position",-2011731912).cljs$core$IFn$_invoke$arity$1(a),new_v));
return cljs.core.assoc.call(null,cljs.core.assoc.call(null,a,new cljs.core.Keyword(null,"velocity","velocity",-581524355),new_v),new cljs.core.Keyword(null,"position","position",-2011731912),new_p);
});})(agent_map))
,agents);
});
/**
 * Processes all of the proposals of all of the agents and makes appropriate
 * changes to the world.
 */
pucks.physics.arbitrate_proposals = (function pucks$physics$arbitrate_proposals(){
return cljs.core.swap_BANG_.call(null,pucks.globals.all_agents,(function (agents){
var transfers = cljs.core.apply.call(null,cljs.core.concat,cljs.core.mapv.call(null,new cljs.core.Keyword(null,"transfer","transfer",327423400),cljs.core.mapv.call(null,new cljs.core.Keyword(null,"proposals","proposals",-1859752048),agents)));
var grouped_by_one_sided = cljs.core.group_by.call(null,pucks.physics.one_sided_QMARK_,transfers);
var transactions = (function (){var remaining = cljs.core.get.call(null,grouped_by_one_sided,false);
var result = cljs.core.mapv.call(null,cljs.core.vector,cljs.core.get.call(null,grouped_by_one_sided,true));
while(true){
if(cljs.core.empty_QMARK_.call(null,remaining)){
return cljs.core.shuffle.call(null,result);
} else {
var G__6789 = cljs.core.filter.call(null,((function (remaining,result,transfers,grouped_by_one_sided){
return (function (p1__6781_SHARP_){
return (!(pucks.physics.affect_same_agents_QMARK_.call(null,p1__6781_SHARP_,cljs.core.first.call(null,remaining))));
});})(remaining,result,transfers,grouped_by_one_sided))
,remaining);
var G__6790 = cljs.core.concat.call(null,result,pucks.physics.all_pairs.call(null,cljs.core.filterv.call(null,((function (remaining,result,transfers,grouped_by_one_sided){
return (function (p1__6782_SHARP_){
return pucks.physics.affect_same_agents_QMARK_.call(null,p1__6782_SHARP_,cljs.core.first.call(null,remaining));
});})(remaining,result,transfers,grouped_by_one_sided))
,remaining)));
remaining = G__6789;
result = G__6790;
continue;
}
break;
}
})();
var post_xfer_agents = (function (){var remaining = transactions;
var agent_map = cljs.core.zipmap.call(null,cljs.core.map.call(null,new cljs.core.Keyword(null,"id","id",-1388402092),agents),cljs.core.map.call(null,((function (remaining,transfers,grouped_by_one_sided,transactions){
return (function (p1__6783_SHARP_){
return cljs.core.dissoc.call(null,p1__6783_SHARP_,new cljs.core.Keyword(null,"bound-to","bound-to",-1422182221));
});})(remaining,transfers,grouped_by_one_sided,transactions))
,agents));
while(true){
if(cljs.core.empty_QMARK_.call(null,remaining)){
return cljs.core.vec.call(null,cljs.core.vals.call(null,agent_map));
} else {
var transaction = cljs.core.first.call(null,remaining);
var xfer1 = cljs.core.first.call(null,transaction);
var self_id = new cljs.core.Keyword(null,"self","self",-1547428899).cljs$core$IFn$_invoke$arity$1(xfer1);
var self = cljs.core.get.call(null,agent_map,self_id);
var other_id = new cljs.core.Keyword(null,"other","other",995793544).cljs$core$IFn$_invoke$arity$1(xfer1);
var other = cljs.core.get.call(null,agent_map,other_id);
if(cljs.core.truth_(new cljs.core.Keyword(null,"zapper","zapper",362355558).cljs$core$IFn$_invoke$arity$1(self))){
if(cljs.core.truth_(new cljs.core.Keyword(null,"mobile","mobile",1403078170).cljs$core$IFn$_invoke$arity$1(other))){
var G__6791 = cljs.core.rest.call(null,remaining);
var G__6792 = cljs.core.assoc.call(null,agent_map,other_id,cljs.core.assoc.call(null,other,new cljs.core.Keyword(null,"energy","energy",129856526),(function (){var x__4219__auto__ = (0);
var y__4220__auto__ = (new cljs.core.Keyword(null,"energy","energy",129856526).cljs$core$IFn$_invoke$arity$1(other) - new cljs.core.Keyword(null,"energy","energy",129856526).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"ask","ask",707712414).cljs$core$IFn$_invoke$arity$1(xfer1)));
return ((x__4219__auto__ > y__4220__auto__) ? x__4219__auto__ : y__4220__auto__);
})()));
remaining = G__6791;
agent_map = G__6792;
continue;
} else {
var G__6793 = cljs.core.rest.call(null,remaining);
var G__6794 = agent_map;
remaining = G__6793;
agent_map = G__6794;
continue;
}
} else {
if(pucks.physics.one_sided_QMARK_.call(null,xfer1)){
var G__6795 = cljs.core.rest.call(null,remaining);
var G__6796 = ((pucks.physics.can_afford.call(null,self,new cljs.core.Keyword(null,"bid","bid",-1944960257).cljs$core$IFn$_invoke$arity$1(xfer1)))?cljs.core.assoc.call(null,cljs.core.assoc.call(null,cljs.core.dissoc.call(null,cljs.core.dissoc.call(null,agent_map,self_id),other_id),self_id,pucks.physics.without.call(null,self,new cljs.core.Keyword(null,"bid","bid",-1944960257).cljs$core$IFn$_invoke$arity$1(xfer1))),other_id,pucks.physics.with$.call(null,other,new cljs.core.Keyword(null,"bid","bid",-1944960257).cljs$core$IFn$_invoke$arity$1(xfer1))):agent_map);
remaining = G__6795;
agent_map = G__6796;
continue;
} else {
if(cljs.core.empty_QMARK_.call(null,cljs.core.rest.call(null,transaction))){
var G__6797 = cljs.core.rest.call(null,remaining);
var G__6798 = agent_map;
remaining = G__6797;
agent_map = G__6798;
continue;
} else {
var xfer2 = cljs.core.second.call(null,transaction);
if(cljs.core.truth_((function (){var and__4120__auto__ = cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"self-id","self-id",1555241467).cljs$core$IFn$_invoke$arity$1(xfer1),new cljs.core.Keyword(null,"other-id","other-id",-793128246).cljs$core$IFn$_invoke$arity$1(xfer2));
if(and__4120__auto__){
var and__4120__auto____$1 = cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"self-id","self-id",1555241467).cljs$core$IFn$_invoke$arity$1(xfer2),new cljs.core.Keyword(null,"other-id","other-id",-793128246).cljs$core$IFn$_invoke$arity$1(xfer1));
if(and__4120__auto____$1){
var and__4120__auto____$2 = pucks.physics.can_afford.call(null,self,new cljs.core.Keyword(null,"bid","bid",-1944960257).cljs$core$IFn$_invoke$arity$1(xfer1));
if(and__4120__auto____$2){
var and__4120__auto____$3 = pucks.physics.can_afford.call(null,other,new cljs.core.Keyword(null,"bid","bid",-1944960257).cljs$core$IFn$_invoke$arity$1(xfer2));
if(and__4120__auto____$3){
var and__4120__auto____$4 = pucks.physics.acceptable.call(null,new cljs.core.Keyword(null,"ask","ask",707712414).cljs$core$IFn$_invoke$arity$1(xfer1),new cljs.core.Keyword(null,"bid","bid",-1944960257).cljs$core$IFn$_invoke$arity$1(xfer1),new cljs.core.Keyword(null,"bid","bid",-1944960257).cljs$core$IFn$_invoke$arity$1(xfer2));
if(cljs.core.truth_(and__4120__auto____$4)){
return pucks.physics.acceptable.call(null,new cljs.core.Keyword(null,"ask","ask",707712414).cljs$core$IFn$_invoke$arity$1(xfer2),new cljs.core.Keyword(null,"bid","bid",-1944960257).cljs$core$IFn$_invoke$arity$1(xfer2),new cljs.core.Keyword(null,"bid","bid",-1944960257).cljs$core$IFn$_invoke$arity$1(xfer1));
} else {
return and__4120__auto____$4;
}
} else {
return and__4120__auto____$3;
}
} else {
return and__4120__auto____$2;
}
} else {
return and__4120__auto____$1;
}
} else {
return and__4120__auto__;
}
})())){
var G__6799 = cljs.core.rest.call(null,remaining);
var G__6800 = pucks.physics.process_transfer_bid_in_agent_map.call(null,xfer2,pucks.physics.process_transfer_bid_in_agent_map.call(null,xfer1,agent_map));
remaining = G__6799;
agent_map = G__6800;
continue;
} else {
var G__6801 = cljs.core.rest.call(null,remaining);
var G__6802 = agent_map;
remaining = G__6801;
agent_map = G__6802;
continue;
}
}
}
}
}
break;
}
})();
return pucks.physics.enforce_bonds.call(null,cljs.core.vec.call(null,cljs.core.apply.call(null,cljs.core.concat,pucks.util.pmapallv.call(null,((function (transfers,grouped_by_one_sided,transactions,post_xfer_agents){
return (function (p__6786){
var map__6787 = p__6786;
var map__6787__$1 = (((((!((map__6787 == null))))?(((((map__6787.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__6787.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.call(null,cljs.core.hash_map,map__6787):map__6787);
var agent = map__6787__$1;
var neighbors = cljs.core.get.call(null,map__6787__$1,new cljs.core.Keyword(null,"neighbors","neighbors",1430436473));
var mobile = cljs.core.get.call(null,map__6787__$1,new cljs.core.Keyword(null,"mobile","mobile",1403078170));
var velocity = cljs.core.get.call(null,map__6787__$1,new cljs.core.Keyword(null,"velocity","velocity",-581524355));
var rotation = cljs.core.get.call(null,map__6787__$1,new cljs.core.Keyword(null,"rotation","rotation",-1728051644));
var radius = cljs.core.get.call(null,map__6787__$1,new cljs.core.Keyword(null,"radius","radius",-2073122258));
var energy = cljs.core.get.call(null,map__6787__$1,new cljs.core.Keyword(null,"energy","energy",129856526));
var thrust_angle = cljs.core.get.call(null,map__6787__$1,new cljs.core.Keyword(null,"thrust-angle","thrust-angle",-1677390385));
var proposals = cljs.core.get.call(null,map__6787__$1,new cljs.core.Keyword(null,"proposals","proposals",-1859752048));
var position = cljs.core.get.call(null,map__6787__$1,new cljs.core.Keyword(null,"position","position",-2011731912));
var colliding_neighbors = cljs.core.filter.call(null,((function (map__6787,map__6787__$1,agent,neighbors,mobile,velocity,rotation,radius,energy,thrust_angle,proposals,position,transfers,grouped_by_one_sided,transactions,post_xfer_agents){
return (function (p1__6784_SHARP_){
var and__4120__auto__ = new cljs.core.Keyword(null,"solid","solid",-2023773691).cljs$core$IFn$_invoke$arity$1(p1__6784_SHARP_);
if(cljs.core.truth_(and__4120__auto__)){
return pucks.physics.colliding_QMARK_.call(null,agent,p1__6784_SHARP_);
} else {
return and__4120__auto__;
}
});})(map__6787,map__6787__$1,agent,neighbors,mobile,velocity,rotation,radius,energy,thrust_angle,proposals,position,transfers,grouped_by_one_sided,transactions,post_xfer_agents))
,neighbors);
var proposed_a = pucks.vec2D._STAR_v.call(null,(function (){var or__4131__auto__ = new cljs.core.Keyword(null,"acceleration","acceleration",-1213888421).cljs$core$IFn$_invoke$arity$1(proposals);
if(cljs.core.truth_(or__4131__auto__)){
return or__4131__auto__;
} else {
return (0);
}
})(),pucks.util.rotation__GT_relative_position.call(null,pucks.util.wrap_rotation.call(null,(rotation + thrust_angle))));
var anti_collision_a = (cljs.core.truth_(mobile)?((cljs.core.empty_QMARK_.call(null,colliding_neighbors))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0)], null):pucks.vec2D._STAR_v.call(null,new cljs.core.Keyword(null,"collision-resolution-acceleration","collision-resolution-acceleration",-346652058).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,pucks.globals.pucks_settings)),cljs.core.apply.call(null,pucks.vec2D.avgv,cljs.core.mapv.call(null,pucks.vec2D._v,cljs.core.mapv.call(null,new cljs.core.Keyword(null,"position","position",-2011731912),colliding_neighbors))))):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0)], null));
var just_collided = (function (){var and__4120__auto__ = mobile;
if(cljs.core.truth_(and__4120__auto__)){
var and__4120__auto____$1 = (!((pucks.vec2D.length.call(null,anti_collision_a) === (0))));
if(and__4120__auto____$1){
return cljs.core.some.call(null,((function (and__4120__auto____$1,and__4120__auto__,colliding_neighbors,proposed_a,anti_collision_a,map__6787,map__6787__$1,agent,neighbors,mobile,velocity,rotation,radius,energy,thrust_angle,proposals,position,transfers,grouped_by_one_sided,transactions,post_xfer_agents){
return (function (neigh){
return cljs.core.not.call(null,cljs.core.some.call(null,cljs.core.PersistentHashSet.createAsIfByAssoc([new cljs.core.Keyword(null,"id","id",-1388402092).cljs$core$IFn$_invoke$arity$1(neigh)]),new cljs.core.Keyword(null,"bound-to","bound-to",-1422182221).cljs$core$IFn$_invoke$arity$1(agent)));
});})(and__4120__auto____$1,and__4120__auto__,colliding_neighbors,proposed_a,anti_collision_a,map__6787,map__6787__$1,agent,neighbors,mobile,velocity,rotation,radius,energy,thrust_angle,proposals,position,transfers,grouped_by_one_sided,transactions,post_xfer_agents))
,colliding_neighbors);
} else {
return and__4120__auto____$1;
}
} else {
return and__4120__auto__;
}
})();
var new_a = pucks.vec2D.limit_vec2D.call(null,pucks.vec2D._PLUS_v.call(null,proposed_a,anti_collision_a),((cljs.core.truth_(just_collided)?(10):(1)) * new cljs.core.Keyword(null,"max-acceleration","max-acceleration",-138471785).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,pucks.globals.pucks_settings))));
var proposed_v = pucks.vec2D._PLUS_v.call(null,velocity,new_a);
var new_v = (cljs.core.truth_(mobile)?pucks.vec2D.limit_vec2D.call(null,proposed_v,(cljs.core.truth_(just_collided)?(function (){var x__4219__auto__ = 0.5;
var y__4220__auto__ = (function (){var x__4222__auto__ = (new cljs.core.Keyword(null,"max-velocity","max-velocity",-1012892068).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,pucks.globals.pucks_settings)) / radius);
var y__4223__auto__ = pucks.vec2D.length.call(null,cljs.core.apply.call(null,pucks.vec2D._PLUS_v,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [velocity], null),cljs.core.mapv.call(null,new cljs.core.Keyword(null,"velocity","velocity",-581524355),colliding_neighbors))));
return ((x__4222__auto__ < y__4223__auto__) ? x__4222__auto__ : y__4223__auto__);
})();
return ((x__4219__auto__ > y__4220__auto__) ? x__4219__auto__ : y__4220__auto__);
})():(new cljs.core.Keyword(null,"max-velocity","max-velocity",-1012892068).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,pucks.globals.pucks_settings)) / radius))):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0)], null));
var proposed_r = (cljs.core.truth_(new cljs.core.Keyword(null,"rotation","rotation",-1728051644).cljs$core$IFn$_invoke$arity$1(proposals))?pucks.util.wrap_rotation.call(null,new cljs.core.Keyword(null,"rotation","rotation",-1728051644).cljs$core$IFn$_invoke$arity$1(proposals)):null);
var new_r = (cljs.core.truth_((function (){var and__4120__auto__ = mobile;
if(cljs.core.truth_(and__4120__auto__)){
return proposed_r;
} else {
return and__4120__auto__;
}
})())?pucks.util.wrap_rotation.call(null,(function (){var max_rotational_velocity = new cljs.core.Keyword(null,"max-rotational-velocity","max-rotational-velocity",884275032).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,pucks.globals.pucks_settings));
if((proposed_r === rotation)){
return rotation;
} else {
if((((proposed_r > rotation)) && (((proposed_r - rotation) < pucks.globals.pi)))){
return (rotation + (function (){var x__4222__auto__ = max_rotational_velocity;
var y__4223__auto__ = (proposed_r - rotation);
return ((x__4222__auto__ < y__4223__auto__) ? x__4222__auto__ : y__4223__auto__);
})());
} else {
if((((proposed_r < rotation)) && (((rotation - proposed_r) > pucks.globals.pi)))){
return (rotation + (function (){var x__4222__auto__ = max_rotational_velocity;
var y__4223__auto__ = ((pucks.globals.pi - rotation) + (proposed_r - pucks.globals.minus_pi));
return ((x__4222__auto__ < y__4223__auto__) ? x__4222__auto__ : y__4223__auto__);
})());
} else {
if((proposed_r < rotation)){
return (rotation - (function (){var x__4222__auto__ = max_rotational_velocity;
var y__4223__auto__ = (rotation - proposed_r);
return ((x__4222__auto__ < y__4223__auto__) ? x__4222__auto__ : y__4223__auto__);
})());
} else {
return (rotation - (function (){var x__4222__auto__ = max_rotational_velocity;
var y__4223__auto__ = ((rotation - pucks.globals.minus_pi) + (pucks.globals.pi - proposed_r));
return ((x__4222__auto__ < y__4223__auto__) ? x__4222__auto__ : y__4223__auto__);
})());

}
}
}
}
})()):rotation);
var proposed_ta = (cljs.core.truth_(new cljs.core.Keyword(null,"thrust-angle","thrust-angle",-1677390385).cljs$core$IFn$_invoke$arity$1(proposals))?pucks.util.wrap_rotation.call(null,new cljs.core.Keyword(null,"thrust-angle","thrust-angle",-1677390385).cljs$core$IFn$_invoke$arity$1(proposals)):null);
var new_ta = (cljs.core.truth_((function (){var and__4120__auto__ = mobile;
if(cljs.core.truth_(and__4120__auto__)){
return proposed_ta;
} else {
return and__4120__auto__;
}
})())?pucks.util.wrap_rotation.call(null,(function (){var max_rotational_velocity = new cljs.core.Keyword(null,"max-rotational-velocity","max-rotational-velocity",884275032).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,pucks.globals.pucks_settings));
if((proposed_ta === thrust_angle)){
return thrust_angle;
} else {
if((((proposed_ta > thrust_angle)) && (((proposed_ta - thrust_angle) < pucks.globals.pi)))){
return (thrust_angle + (function (){var x__4222__auto__ = max_rotational_velocity;
var y__4223__auto__ = (proposed_ta - thrust_angle);
return ((x__4222__auto__ < y__4223__auto__) ? x__4222__auto__ : y__4223__auto__);
})());
} else {
if((((proposed_ta < thrust_angle)) && (((thrust_angle - proposed_ta) > pucks.globals.pi)))){
return (thrust_angle + (function (){var x__4222__auto__ = max_rotational_velocity;
var y__4223__auto__ = ((pucks.globals.pi - thrust_angle) + (proposed_ta - pucks.globals.minus_pi));
return ((x__4222__auto__ < y__4223__auto__) ? x__4222__auto__ : y__4223__auto__);
})());
} else {
if((proposed_ta < thrust_angle)){
return (thrust_angle - (function (){var x__4222__auto__ = max_rotational_velocity;
var y__4223__auto__ = (thrust_angle - proposed_ta);
return ((x__4222__auto__ < y__4223__auto__) ? x__4222__auto__ : y__4223__auto__);
})());
} else {
return (thrust_angle - (function (){var x__4222__auto__ = max_rotational_velocity;
var y__4223__auto__ = ((thrust_angle - pucks.globals.minus_pi) + (pucks.globals.pi - proposed_ta));
return ((x__4222__auto__ < y__4223__auto__) ? x__4222__auto__ : y__4223__auto__);
})());

}
}
}
}
})()):thrust_angle);
return cljs.core.concat.call(null,(cljs.core.truth_((function (){var and__4120__auto__ = new cljs.core.Keyword(null,"spawn","spawn",-1213583293).cljs$core$IFn$_invoke$arity$1(proposals);
if(cljs.core.truth_(and__4120__auto__)){
return (energy > (0.1 + (0.1 * cljs.core.count.call(null,new cljs.core.Keyword(null,"spawn","spawn",-1213583293).cljs$core$IFn$_invoke$arity$1(proposals)))));
} else {
return and__4120__auto__;
}
})())?cljs.core.mapv.call(null,((function (colliding_neighbors,proposed_a,anti_collision_a,just_collided,new_a,proposed_v,new_v,proposed_r,new_r,proposed_ta,new_ta,map__6787,map__6787__$1,agent,neighbors,mobile,velocity,rotation,radius,energy,thrust_angle,proposals,position,transfers,grouped_by_one_sided,transactions,post_xfer_agents){
return (function (proposed_puck){
return pucks.util.derelativize_position.call(null,position,cljs.core.merge.call(null,proposed_puck,(cljs.core.truth_(new cljs.core.Keyword(null,"nursery","nursery",813370890).cljs$core$IFn$_invoke$arity$1(agent))?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"id","id",-1388402092),cljs.core.gensym.call(null,"puck-"),new cljs.core.Keyword(null,"energy","energy",129856526),1.0,new cljs.core.Keyword(null,"steps","steps",-128433302),(0)], null):new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"id","id",-1388402092),cljs.core.gensym.call(null,"puck-"),new cljs.core.Keyword(null,"energy","energy",129856526),0.1,new cljs.core.Keyword(null,"steps","steps",-128433302),(0),new cljs.core.Keyword(null,"memory","memory",-1449401430),(cljs.core.truth_(new cljs.core.Keyword(null,"genome","genome",-1313307628).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"memory","memory",-1449401430).cljs$core$IFn$_invoke$arity$1(proposed_puck)))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"genome","genome",-1313307628),new cljs.core.Keyword(null,"genome","genome",-1313307628).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"memory","memory",-1449401430).cljs$core$IFn$_invoke$arity$1(proposed_puck))], null):cljs.core.PersistentArrayMap.EMPTY),new cljs.core.Keyword(null,"inventory","inventory",860201871),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,"sensed","sensed",1518013926),cljs.core.PersistentVector.EMPTY], null))));
});})(colliding_neighbors,proposed_a,anti_collision_a,just_collided,new_a,proposed_v,new_v,proposed_r,new_r,proposed_ta,new_ta,map__6787,map__6787__$1,agent,neighbors,mobile,velocity,rotation,radius,energy,thrust_angle,proposals,position,transfers,grouped_by_one_sided,transactions,post_xfer_agents))
,new cljs.core.Keyword(null,"spawn","spawn",-1213583293).cljs$core$IFn$_invoke$arity$1(proposals)):cljs.core.PersistentVector.EMPTY),(cljs.core.truth_((function (){var and__4120__auto__ = new cljs.core.Keyword(null,"fire-torpedo","fire-torpedo",-299372637).cljs$core$IFn$_invoke$arity$1(proposals);
if(cljs.core.truth_(and__4120__auto__)){
return (energy > new cljs.core.Keyword(null,"torpedo-energy","torpedo-energy",290470477).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,pucks.globals.pucks_settings)));
} else {
return and__4120__auto__;
}
})())?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [pucks.util.derelativize_position.call(null,position,cljs.core.merge.call(null,pucks.agents.torpedo.torpedo.call(null),(function (){var dirxy = pucks.util.rotation__GT_relative_position.call(null,new_r);
var len = pucks.vec2D.length.call(null,dirxy);
var dirxy_norm = cljs.core.map.call(null,((function (dirxy,len,colliding_neighbors,proposed_a,anti_collision_a,just_collided,new_a,proposed_v,new_v,proposed_r,new_r,proposed_ta,new_ta,map__6787,map__6787__$1,agent,neighbors,mobile,velocity,rotation,radius,energy,thrust_angle,proposals,position,transfers,grouped_by_one_sided,transactions,post_xfer_agents){
return (function (p1__6785_SHARP_){
return (p1__6785_SHARP_ / len);
});})(dirxy,len,colliding_neighbors,proposed_a,anti_collision_a,just_collided,new_a,proposed_v,new_v,proposed_r,new_r,proposed_ta,new_ta,map__6787,map__6787__$1,agent,neighbors,mobile,velocity,rotation,radius,energy,thrust_angle,proposals,position,transfers,grouped_by_one_sided,transactions,post_xfer_agents))
,dirxy);
return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"energy","energy",129856526),new cljs.core.Keyword(null,"torpedo-energy","torpedo-energy",290470477).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,pucks.globals.pucks_settings)),new cljs.core.Keyword(null,"rotation","rotation",-1728051644),rotation,new cljs.core.Keyword(null,"velocity","velocity",-581524355),pucks.vec2D._STAR_v.call(null,(10),dirxy_norm),new cljs.core.Keyword(null,"position","position",-2011731912),pucks.vec2D._STAR_v.call(null,(35),dirxy_norm)], null);
})()))], null):cljs.core.PersistentVector.EMPTY),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [pucks.physics.update_properties.call(null,cljs.core.dissoc.call(null,cljs.core.assoc.call(null,cljs.core.assoc.call(null,cljs.core.assoc.call(null,cljs.core.assoc.call(null,cljs.core.assoc.call(null,cljs.core.assoc.call(null,agent,new cljs.core.Keyword(null,"velocity","velocity",-581524355),new_v),new cljs.core.Keyword(null,"rotation","rotation",-1728051644),new_r),new cljs.core.Keyword(null,"thrust-angle","thrust-angle",-1677390385),new_ta),new cljs.core.Keyword(null,"energy","energy",129856526),(function (){var x__4222__auto__ = (1);
var y__4223__auto__ = (function (){var x__4219__auto__ = (0);
var y__4220__auto__ = (((((energy - (cljs.core.truth_((function (){var and__4120__auto__ = mobile;
if(cljs.core.truth_(and__4120__auto__)){
return cljs.core.not.call(null,new cljs.core.Keyword(null,"stone","stone",-59276120).cljs$core$IFn$_invoke$arity$1(agent));
} else {
return and__4120__auto__;
}
})())?new cljs.core.Keyword(null,"cost-of-living","cost-of-living",-336787505).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,pucks.globals.pucks_settings)):(0))) - (cljs.core.truth_((function (){var and__4120__auto__ = just_collided;
if(cljs.core.truth_(and__4120__auto__)){
return ((cljs.core.not.call(null,new cljs.core.Keyword(null,"vent","vent",-1467857469).cljs$core$IFn$_invoke$arity$1(agent))) && (cljs.core.not.call(null,new cljs.core.Keyword(null,"nursery","nursery",813370890).cljs$core$IFn$_invoke$arity$1(agent))) && (cljs.core.not.call(null,new cljs.core.Keyword(null,"stone","stone",-59276120).cljs$core$IFn$_invoke$arity$1(agent))));
} else {
return and__4120__auto__;
}
})())?new cljs.core.Keyword(null,"cost-of-collision","cost-of-collision",1056331992).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,pucks.globals.pucks_settings)):(0))) - (cljs.core.truth_(new cljs.core.Keyword(null,"vent","vent",-1467857469).cljs$core$IFn$_invoke$arity$1(agent))?-0.005:(0))) - (cljs.core.truth_((function (){var and__4120__auto__ = new cljs.core.Keyword(null,"fire-torpedo","fire-torpedo",-299372637).cljs$core$IFn$_invoke$arity$1(proposals);
if(cljs.core.truth_(and__4120__auto__)){
return (energy > 0.1);
} else {
return and__4120__auto__;
}
})())?0.1:(0))) - (cljs.core.truth_((function (){var and__4120__auto__ = new cljs.core.Keyword(null,"spawn","spawn",-1213583293).cljs$core$IFn$_invoke$arity$1(proposals);
if(cljs.core.truth_(and__4120__auto__)){
return ((cljs.core.not.call(null,new cljs.core.Keyword(null,"nursery","nursery",813370890).cljs$core$IFn$_invoke$arity$1(agent))) && ((energy > (0.1 + (0.1 * cljs.core.count.call(null,new cljs.core.Keyword(null,"spawn","spawn",-1213583293).cljs$core$IFn$_invoke$arity$1(proposals)))))));
} else {
return and__4120__auto__;
}
})())?(new cljs.core.Keyword(null,"energy-transfer-to-child","energy-transfer-to-child",1332156872).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,pucks.globals.pucks_settings)) * cljs.core.count.call(null,new cljs.core.Keyword(null,"spawn","spawn",-1213583293).cljs$core$IFn$_invoke$arity$1(proposals))):(0)));
return ((x__4219__auto__ > y__4220__auto__) ? x__4219__auto__ : y__4220__auto__);
})();
return ((x__4222__auto__ < y__4223__auto__) ? x__4222__auto__ : y__4223__auto__);
})()),new cljs.core.Keyword(null,"just-collided","just-collided",-1982799533),just_collided),new cljs.core.Keyword(null,"memory","memory",-1449401430),cljs.core.merge.call(null,new cljs.core.Keyword(null,"memory","memory",-1449401430).cljs$core$IFn$_invoke$arity$1(agent),new cljs.core.Keyword(null,"memory","memory",-1449401430).cljs$core$IFn$_invoke$arity$1(proposals),new cljs.core.Keyword(null,"promise","promise",1767129287).cljs$core$IFn$_invoke$arity$1(agent))),new cljs.core.Keyword(null,"promise","promise",1767129287)),new cljs.core.Keyword(null,"properties","properties",685819552).cljs$core$IFn$_invoke$arity$1(proposals))], null));
});})(transfers,grouped_by_one_sided,transactions,post_xfer_agents))
,post_xfer_agents))));
}));
});

//# sourceMappingURL=physics.js.map
