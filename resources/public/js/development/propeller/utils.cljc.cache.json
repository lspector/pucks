["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$propeller.utils","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$indexof",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/jfong/projects/pucks/resources/public/js/development/propeller/utils.cljc","~:line",3,"~:column",7,"~:end-line",3,"~:end-column",14,"~:arglists",["~#list",["~$quote",["^E",[["~$element","~$coll"]]]]],"~:doc","Returns the first index of an element in a collection. If the element is not\n  present in the collection, returns -1."],"^5","~$propeller.utils/indexof","^?","resources/public/js/development/propeller/utils.cljc","^C",14,"~:method-params",["^E",[["^G","^H"]]],"~:protocol-impl",null,"~:arglists-meta",["^E",[null,null]],"^A",1,"~:variadic?",false,"^@",3,"~:ret-tag",["^4",["~$any","~$number"]],"^B",3,"~:max-fixed-arity",2,"~:fn-var",true,"^D",["^E",["^F",["^E",[["^G","^H"]]]]],"^I","Returns the first index of an element in a collection. If the element is not\n  present in the collection, returns -1."],"~$not-lazy",["^ ","^=",null,"^>",["^ ","^?","/Users/jfong/projects/pucks/resources/public/js/development/propeller/utils.cljc","^@",9,"^A",7,"^B",9,"^C",15,"^D",["^E",["^F",["^E",[["~$lst"]]]]],"^I","Returns lst if it is not a seq, or a non-lazy version of lst if it is."],"^5","~$propeller.utils/not-lazy","^?","resources/public/js/development/propeller/utils.cljc","^C",15,"^K",["^E",[["^U"]]],"^L",null,"^M",["^E",[null,null]],"^A",1,"^N",false,"^@",9,"^O",["^4",[null,"^P"]],"^B",9,"^R",1,"^S",true,"^D",["^E",["^F",["^E",[["^U"]]]]],"^I","Returns lst if it is not a seq, or a non-lazy version of lst if it is."],"~$ensure-list",["^ ","^=",null,"^>",["^ ","^?","/Users/jfong/projects/pucks/resources/public/js/development/propeller/utils.cljc","^@",16,"^A",7,"^B",16,"^C",18,"^D",["^E",["^F",["^E",[["~$thing"]]]]],"^I","Returns a non-lazy list if passed a seq argument. Othwrwise, returns a list\n  containing the argument."],"^5","~$propeller.utils/ensure-list","^?","resources/public/js/development/propeller/utils.cljc","^C",18,"^K",["^E",[["^X"]]],"^L",null,"^M",["^E",[null,null]],"^A",1,"^N",false,"^@",16,"^O",["^4",[null,"^P","~$cljs.core/List"]],"^B",16,"^R",1,"^S",true,"^D",["^E",["^F",["^E",[["^X"]]]]],"^I","Returns a non-lazy list if passed a seq argument. Othwrwise, returns a list\n  containing the argument."],"~$random-instruction",["^ ","^=",null,"^>",["^ ","^?","/Users/jfong/projects/pucks/resources/public/js/development/propeller/utils.cljc","^@",24,"^A",7,"^B",24,"^C",25,"^D",["^E",["^F",["^E",[["~$instructions"]]]]],"^I","Returns a random instruction from a supplied pool of instructions, evaluating\n  ERC-producing functions to a constant literal."],"^5","~$propeller.utils/random-instruction","^?","resources/public/js/development/propeller/utils.cljc","^C",25,"^K",["^E",[["^10"]]],"^L",null,"^M",["^E",[null,null]],"^A",1,"^N",false,"^@",24,"^O",["^4",["^P","~$clj-nil"]],"^B",24,"^R",1,"^S",true,"^D",["^E",["^F",["^E",[["^10"]]]]],"^I","Returns a random instruction from a supplied pool of instructions, evaluating\n  ERC-producing functions to a constant literal."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^I",null]